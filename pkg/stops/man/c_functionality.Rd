% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/structurednessindices.R
\name{c_functionality}
\alias{c_functionality}
\title{c-functionality
calculates the c-functionality based on the maximum edge value
We define c-functionality as the mean functionality between any two dimensions - or use the determinant of the MINE matrix? - TBD}
\usage{
c_functionality(confs, alpha = 1, C = 15, var.thr = 1e-05, eps = NULL)
}
\arguments{
\item{confs}{a numeric matrix or data frame with two columns}

\item{alpha}{an optional number of cells allowed in the X-by-Y search-grid. Default value is 1}

\item{C}{an optional number determining the starting point of the X-by-Y search-grid. When trying to partition the x-axis into X columns, the algorithm will start with at most C X clumps. Default value is 15.}

\item{var.thr}{minimum value allowed for the variance of the input variables, since mine can not be computed in case of variance close to 0. Default value is 1e-5.}

\item{eps}{integer in [0,1] (?).  If NULL (default) it is set to 1-MIC. It can be set to zero for noiseless functions, but the default choice is the most appropriate parametrization for general cases (as stated in Reshef et al. SOM). It provides robustness.}
}
\description{
c-functionality
calculates the c-functionality based on the maximum edge value
We define c-functionality as the mean functionality between any two dimensions - or use the determinant of the MINE matrix? - TBD
}
\examples{
x<-seq(-3,3,length.out=200)
y<-sqrt(3^2-x^2)
z<- sin(y-x)
confs<-cbind(x,y,z)
c_functionality(confs)
}

