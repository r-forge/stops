% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cops-package.R, R/cops.R
\docType{package}
\name{cops}
\alias{cops}
\alias{cops-package}
\title{cops: cluster optimized proximity scaling}
\usage{
cops(dis, variant = c("0", "1", "2", "Variant0", "Variant1", "Variant2", "v0",
  "v1", "v2", "COPS-0", "COPS-C", "P-COPS", "configuration-0",
  "configuration-c", "profile", "coploss-0", "coploss-c", "p-coploss", "COPS-P",
  "coploss-p"), ...)
}
\arguments{
\item{dis}{a dissimilarity matrix or a dist object}

\item{variant}{a character string specifying which variant of COPS to fit. Allowed is any of the following "0","1","2","Variant0","Variant1","Variant2","v0","v1","v2","COPS-0","COPS-C","P-COPS","configuration-0","configuration-c","profile","coploss-0","coploss-c","p-coploss". Defaults to "COPS-C".}

\item{...}{arguments to be passed to shrinkCoploss0 (for Variant 0) coplossMin (for Variant 1) or pcops (for Variant 2). See also \code{\link{shrinkCoploss0}} \code{\link{coplossMin}} or \code{\link{pcops}}}
}
\value{
For Variant 0 see \code{\link{shrinkCoploss0}}, Variant 1 see \code{\link{coplossMin}}, for Variant 2 see \code{\link{pcops}}
}
\description{
Cluster optimized proximity scaling (COPS) refers to multidimensional scaling methods that aim at pronouncing the clustered appearance of the configuration. They achieve this by transforming proximities/distances with power functions and augment the fitting criterion with a clusteredness index, the OPTICS Cordillera. There are two variants: One for finding the configuration directly for given parameters (COPS-C), and one for using the augmented fitting criterion to find optimal parameters (P-COPS). The package contains various functions, wrappers, methods and classes for fitting, plotting and displaying different MDS models in a COPS framework like Torgerson scaling, SMACOF, Sammon mapping, elastic scaling, symmetric SMACOF, spherical SMACOF, sstress, rstress, powermds, power elastic scaling, power sammon mapping, powerstress. All of these models can also solely be fit as MDS with power transformations. The package further contains functions for optimization (Adaptive LJ Algorithmus, particle swarm optimization).

Minimizing coploss for a clustered MDS configuration. Allows to choose COPS-0 (finding a configuration from coploss with residual shrinkage to zero) and COPS-C (finding a configuration from coploss with cordillera penalty) and profile COPS (finding hyperparameters for MDS models with power transformations). It is wrapper for shrinkCoploss0, coplossMin and pcops.
}
\details{
The cops package provides five categories of important functions:

Models & Algorithms:
\itemize{
\item cops() ... which fit COPS models as described in Rusch et al. (2015) and Rusch et al. (2016). By setting cordweight to zero they can also be used to fit metric MDS for many different models, see below.  
\item powerStressMin()... a workhorse for fitting s-stress, r-stress (de Leeuw, 2014), powerStress (e.g., Rusch et al., 2015a), Sammon mapping with power transformations (powersammon) and elastic scaling with power transformation (powerelastic). They can most conveniently be accessed via the cops functions and setting stressweight=1 and cordweight or by the dedicated functions starting with cops_XXX where XXX is the method and setting stressweight=1 and cordweight=0. It uses the nested majorization algorithm for r-stress of De Leeuw(2014).
}

Optimization functions:
\itemize{
\item ljoptim() ... An (adaptive) version of the Luus-Jakola random search
}
Wrappers and convenience functions:
\itemize{
\item conf_adjust(): procrustes adjustment of configurations 
\item cmdscale(), sammon(): wrappers that return S3 objects
\item coploss() ... a function to calculate coploss (Rusch et al., 2015a)
\item cop_smacofSym(), cop_sammon(), cop_cmdscale(), cop_rstress(), cop_powerstress(), cop_smacofSphere(), cop_sammon2(), cop_elastic(), cop_sstress(), cop_powerelastic(), cop_powersammon(): cop versions of these MDS models.
}

Methods: 
For most of the objects returned by the high-level functions S3 classes and methods for standard generics were implemented, including print, summary, plot, plot3d, plot3dstatic.

References:
\itemize{
\item Rusch, T., Mair, P. \& Hornik, K. (2015) COPS: Cluster optimized proximity scaling, Report 2015/1, Discussion Paper Series, Center for Empirical Research Methods, WU Vienna University of Economics and Business.
\item Rusch, T., Mair, P. \& Hornik, K. (2016a) Assessing and quantifying clusteredness: The OPTICS Cordillera, Report 2016/1, Discussion Paper Series, Center for Empirical Research Methods, WU Vienna University of Economics and Business.
}

Authors: Thomas Rusch, Jan de Leeuw, Patrick Mair

Maintainer: Thomas Rusch
}
\examples{
library(cordillera)
data(BankingCrisesDistances)

#shorthand function for COPS-C (finding configuration with coploss)
res<-coplossMin(BankingCrisesDistances[,1:69])
res
summary(res)
plot(res)
plot(res,"reachplot")
plot(res,"transplot")
plot(res,"Shepard")
#shorthand function for P-COPS (hyperparameter search for powerstress)
res<-pcops(BankingCrisesDistances[,1:69])
res
summary(res)
plot(res)
plot(res,"reachplot")
plot(res,"transplot")
plot(res,"Shepard")

\donttest{
#OPTICS
ores<-cordillera::e_optics(res$conf,minpts=2,epsilon=100)
ores
summary(ores)
plot(ores)
}
#OPTICS cordillera
cres<-cordillera::cordillera(res$fit$conf)
cres
summary(cres)
plot(cres)

\donttest{
dis<-as.matrix(smacof::kinshipdelta)

#COPS-C with equal weight to stress and cordillera 
res1<-cops(dis,variant="COPS-C",stressweight=0.5,cordweight=0.5,minpts=2) 
res1
summary(res1)
plot(res1)

#classic mds (i.e. COPS-C with stressweight=1 and cordweight=0 or COPS-0 with cordweight=0)
res2<-cops(dis,variant="COPS-C",stressweight=1,cordweight=0,minpts=2) 
res2
summary(res2)
plot(res2)

#procrustes adjusted
resadj<-conf_adjust(res2$fit$conf,res1$fit$conf)
plot(resadj$ref.conf) #res 2
plot(resadj$other.conf) #res 1

par(mfrow=c(1,2))
plot(res1,"reachplot")
plot(res2,"reachplot") 


#COPS-0 to improve over an MDS result
res0<-powerStressFast(dis)
res2a<-cops(dis,variant="COPS-0",cordweight=1,q=2,init=res0$conf,minpts=2) 
res2a
summary(res2a)
plot(res2a)

resadj<-conf_adjust(res0$fit$conf,res2a$fit$conf)
plot(resadj$ref.conf) #res 0
plot(resadj$other.conf) #res 2a


#s-stress type coploss (i.e. kappa=2, lambda=2)
res3<-cops(dis,variant="COPS-C",kappa=2,lambda=2,stressweight=0.5,cordweight=0.5) 
res3
summary(res3)
plot(res3)

#Sammon stress type coploss
ws<-weightmat=1/dis
diag(ws)<-1 
res4<-cops(dis,variant="COPS-0",nu=-1,weightmat=ws,cordweight=0.5) 
res4
summary(res4)
plot(res4)

#power-stress type profile coploss
# search for optimal kappa and lambda between kappa=0.5,lambda=0.5 and kappa=2,lambda=5
# nu is fixed on -1
ws<-1/dis
diag(ws)<-1 
res5<-cops(dis,variant="P-COPS",loss="powerstress",theta=c(1.4,3,-1),lower=c(1,0.5,-1),upper=c(3,5,-1),weightmat=ws,stressweight=0.9,cordweight=0.1) 
res5
summary(res5)
plot(res5)
}

}
\keyword{clustering}
\keyword{multivariate}

